from dns import resolver
from tabulate import tabulate
import sys
import logging
import threading
import time
from lib.file import files
from argparse import (
    ArgumentParser,
    Action,
    SUPPRESS
)
dnspass=0
class DNSParser(ArgumentParser):
    def __init__(self):
        super(DNSParser, self).__init__()
    
    @staticmethod
    def dnsquery(dns,dnsuser):
        global dnspass
        res = resolver.Resolver()
        if dnsuser!=None:
            res.nameservers = [dnsuser]                   
        try:
            answers = res.query((dns.strip()))
            for rdata in answers:
                dnspass += 1
                data=rdata.to_text()
                print("[*] Not locked!- No {} \t\t- DNS: {} \t\t\t\t- IP: {}".format(dnspass,(dns.strip()), data))
        except Exception as e:
            pass
        else:
            pass
        return 0

    @staticmethod
    def dns(dnsuser):
        global dnspass
        print(dnsuser)
        line = files().readdns("\\..\\db\\hosts.txt")
        for f in line:
            x = threading.Thread(target=DNSParser.dnsquery, args=(f,dnsuser))
            x.start()
        print("No DNS {}".format(dnspass))
        return 0

        